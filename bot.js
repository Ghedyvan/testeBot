const { Client, LocalAuth } = require('whatsapp-web.js');
const { MessageMedia } = require("whatsapp-web.js");
const qrcode = require('qrcode-terminal');
const path = require("path");

const iptvstreamplayer = MessageMedia.fromFilePath("./streamplayer.png");
const ibo = MessageMedia.fromFilePath("./ibo.png");

// Configura√ß√£o do cliente
const client = new Client({
    authStrategy: new LocalAuth(),
    puppeteer: {
        headless: true,
        args: ['--no-sandbox', '--disable-setuid-sandbox']
    }
});

// Gerar QR Code para autentica√ß√£o
client.on('qr', qr => {
    qrcode.generate(qr, { small: true });
});

// Confirma√ß√£o de autentica√ß√£o
client.on('authenticated', () => {
    console.log('Autenticado com sucesso!');
});

// Quando estiver pronto
client.on('ready', () => {
    console.log('Bot est√° pronto!');
});

// Ouvindo mensagens
client.on("message", async (msg) => {
    if (msg.from.endsWith("@g.us")) {
      return; // Ignora mensagens enviadas em grupos
    }
  
    const chatId = msg.from;
    const now = Date.now();
  
    if (
      !userSessions.has(chatId) ||
      now - userSessions.get(chatId).timestamp > 6 * 60 * 60 * 1000
    ) {
      userSessions.set(chatId, { step: "menu", timestamp: now, invalidCount: 0 });
      await msg.reply(
        "Bem-vindo! Escolha uma op√ß√£o:\n\n1Ô∏è‚É£ Teste gr√°tis\n2Ô∏è‚É£ J√° sou cliente"
      );
      return;
    }
  
    const session = userSessions.get(chatId);
  
    if (msg.body === "0") {
      session.step = "menu";
      session.invalidCount = 0;
      await msg.reply(
        "Bem-vindo de volta ao menu! Escolha uma op√ß√£o:\n\n1Ô∏è‚É£ Teste gr√°tis\n2Ô∏è‚É£ J√° sou cliente"
      );
      return;
    }
  
    // Verifica se excedeu o limite de tentativas inv√°lidas
    if (session.invalidCount >= 3) {
      return; // N√£o responde mais ap√≥s 2 tentativas inv√°lidas
    }
  
    if (session.step === "menu") {
      if (msg.body === "1") {
        session.step = "teste_gratis";
        session.invalidCount = 0;
        await msg.reply(
          "Em qual dispositivo gostaria de realizar o teste?\n\n1Ô∏è‚É£ Celular\n2Ô∏è‚É£ TV Box\n3Ô∏è‚É£ Smart TV\n4Ô∏è‚É£ Computador\n\n0Ô∏è‚É£ Menu inicial"
        );
      } else if (msg.body === "2") {
        session.step = "cliente";
        session.invalidCount = 0;
        await msg.reply(
          "Perfeito. Como posso te ajudar?\n\n1Ô∏è‚É£ Quero renovar acesso\n2Ô∏è‚É£ Quero reativar acesso vencido\n3Ô∏è‚É£ Estou com problemas\n4Ô∏è‚É£ Quero configurar um dispositivo\n\n0Ô∏è‚É£ Menu inicial"
        );
      } else {
        session.invalidCount = (session.invalidCount || 0) + 1;
        if (session.invalidCount < 2) {
          await msg.reply(
            "Op√ß√£o inv√°lida! Escolha uma op√ß√£o:\n\n1Ô∏è‚É£ Teste gr√°tis\n2Ô∏è‚É£ J√° sou cliente"
          );
        }
      }
    } else if (session.step === "teste_gratis" || session.step === "configurar") {
      if (msg.body === "1") {
        session.step = "celular";
        session.invalidCount = 0;
        await msg.reply(
          "Seu celular √©:\n\n1Ô∏è‚É£ Android\n2Ô∏è‚É£ iPhone\n\n0Ô∏è‚É£ Menu inicial"
        );
      } else if (msg.body === "2") {
        session.step = "tvbox";
        session.invalidCount = 0;
        await client.sendMessage(msg.from, iptvstreamplayer, {
          caption:
            "‚úÖ Siga os passos abaixo para configurar:\n\n" +
            "üì≤ Procura na PlayStore e baixa um aplicativo chamado *IPTV STREAM PLAYER*.\n\n" +
            "üìå Depois, pode abrir, ir√° aparecer uma tela com 3 bot√µes, voc√™ seleciona o primeiro e ele ir√° te direcionar √† p√°gina onde pede os dados de login.\n" +
            "üöÄ Quando chegar nessa tela, me informe.",
        });
      } else if (msg.body === "3") {
        session.step = "smarttv";
        session.invalidCount = 0;
        await msg.reply(
          "Qual a marca da sua TV?\n\n1Ô∏è‚É£ LG\n2Ô∏è‚É£ Samsung\n3Ô∏è‚É£ Outra com Android\n4Ô∏è‚É£ Outra com Roku\n5Ô∏è‚É£ N√£o sei se √© Roku ou Android\n\n0Ô∏è‚É£ Menu inicial"
        );
      } else if (msg.body === "4") {
        session.invalidCount = 0;
        await msg.reply(
          "üåê Acesse: applime.cc/w\n" +
          "üë§ Use seus dados de login\n\n" +
          "üì© Esqueceu ou ainda n√£o RECEBEU os dados? Me informa aqui!"
        );
      } else {
        session.invalidCount = (session.invalidCount || 0) + 1;
        if (session.invalidCount < 2) {
          await msg.reply(
            "Escolha um dispositivo v√°lido:\n\n1Ô∏è‚É£ Celular\n2Ô∏è‚É£ TV Box\n3Ô∏è‚É£ Smart TV\n4Ô∏è‚É£ Computador\n\n0Ô∏è‚É£ Menu inicial"
          );
        }
      }
    } else if (session.step === "celular") {
      if (msg.body === "1") {
        session.step = "android";
        session.invalidCount = 0;
        await client.sendMessage(msg.from, iptvstreamplayer, {
          caption:
            "‚úÖ Siga os passos abaixo para configurar:\n\n" +
            "üì≤ Procura na PlayStore e baixa um aplicativo chamado *IPTV STREAM PLAYER*.\n\n" +
            "üìå Depois, pode abrir, ir√° aparecer uma tela com 3 bot√µes, voc√™ seleciona o primeiro e ele ir√° te direcionar √† p√°gina onde pede os dados de login.\n" +
            "üöÄ Quando chegar nessa tela, me informe.",
        });
      } else if (msg.body === "2") {
        session.step = "iphone";
        session.invalidCount = 0;
        await msg.reply(
          "‚úÖ Siga os passos abaixo para configurar:\n\n" +
          "1. Baixe o *Smarters Player Lite* na AppStore\n" +
          "2. Abra o app e aceite os termos (Se ele pedir)\n" +
          "3. Selecione *Xtreme Codes* na tela\n\n" +
          "üîë Quando chegar na tela de login, me avise que te envio seus dados!"
        );
      } else {
        session.invalidCount = (session.invalidCount || 0) + 1;
        if (session.invalidCount < 2) {
          await msg.reply(
            "Escolha uma op√ß√£o v√°lida:\n\n1Ô∏è‚É£ Android\n2Ô∏è‚É£ iPhone\n\n0Ô∏è‚É£ Menu inicial"
          );
        }
      }
    } else if (session.step === "smarttv") {
      if (msg.body === "1") {
        session.step = "lg";
        session.invalidCount = 0;
        await msg.reply(
          "‚úÖ Siga os passos abaixo para configurar:\n\n" +
          "‚ñ∏ Abra a loja de apps da TV (*APP* ou *LG Content Store*)\n" +
          "‚ñ∏ Instale o *IPTVSmartersPRO*\n" +
          "‚ñ∏ Abra o app > aceite os termos\n\n" +
          "üì© Quando chegar na tela de login, me avise que te envio seus dados!"
        );
      } else if (msg.body === "2") {
        session.step = "samsung";
        session.invalidCount = 0;
        await msg.reply(
          "‚úÖ Siga os passos abaixo para configurar:\n\n" +
          "‚ñ™ Abra a *Loja Samsung* e instale o *SmartUp*\n" +
          "‚ñ™ Acesse: Configura√ß√µes > Geral > Rede > Status > Config. IP\n" +
          "‚ñ™ Altere o DNS para *Manual*\n" +
          "‚ñ™ Insira: `168.235.81.205` e salve\n" +
          "‚ñ™ Reinicie a TV e abra o SmartUp\n\n" +
          "üì∏ Prontinho! Me envie uma foto da tela que te mando seus dados de acesso."
        );
      } else if (msg.body === "3") {
        session.step = "android";
        session.invalidCount = 0;
        await client.sendMessage(msg.from, iptvstreamplayer, {
          caption:
            "‚úÖ Siga os passos abaixo para configurar:\n\n" +
            "üì≤ Procura na PlayStore e baixa um aplicativo chamado *IPTV STREAM PLAYER*.\n\n" +
            "üìå Depois, pode abrir, ir√° aparecer uma tela com 3 bot√µes, voc√™ seleciona o primeiro e ele ir√° te direcionar √† p√°gina onde pede os dados de login.\n" +
            "üöÄ Quando chegar nessa tela, me informe.",
        });
      } else if (msg.body === "4") {
        session.step = "roku";
        session.invalidCount = 0;
        await client.sendMessage(msg.from, ibo, {
          caption:
            "‚úÖ Siga os passos abaixo para configurar:\n\n" +
            "1Ô∏è‚É£ *Abra* a loja de aplicativos da sua TV\n" +
            "2Ô∏è‚É£ *Procure* pelo aplicativo *IBO PRO* e instale\n" +
            "3Ô∏è‚É£ *Abra* o aplicativo e selecione a op√ß√£o *CHANGE PLAYLIST*\n" +
            "4Ô∏è‚É£ *Me envie* uma foto dos c√≥digos que ser√£o mostrados no lado direito da tela para que eu possa configurar para voc√™\n\n" +
            "‚ö†Ô∏è *Obs:* Todos os apps da TV Roku t√™m uma tarifa anual de *30 reais* (paga apenas 1x por ano).",
        });
      } else if (msg.body === "5") {
        session.step = "outro";
        session.invalidCount = 0;
        await msg.reply(
          "üì± Abre a loja de aplicativos e me manda uma foto da tela, por favor!"
        );
      } else {
        session.invalidCount = (session.invalidCount || 0) + 1;
        if (session.invalidCount < 2) {
          await msg.reply(
            "Qual a marca da sua TV?\n\n1Ô∏è‚É£ LG\n2Ô∏è‚É£ Samsung\n3Ô∏è‚É£ Outra com Android\n4Ô∏è‚É£ Outra com Roku\n5Ô∏è‚É£ N√£o sei se √© Roku ou Android\n\n0Ô∏è‚É£ Menu inicial"
          );
        }
      }
    } else if (session.step === "cliente") {
      if (msg.body === "1") {
        session.step = "renovar";
        session.invalidCount = 0;
        await msg.reply(
          "üí≥ Se voc√™ j√° recebeu o link do InfinitePay, pode pagar por l√°, tranquilo? Se n√£o chegou, √© s√≥ me avisar que eu te envio o link com todo prazer!"
        );
      } else if (msg.body === "2") {
        session.step = "reativar";
        session.invalidCount = 0;
        await msg.reply(
          "üìù A reativa√ß√£o de acesso vencido tem taxa de R$5 (total: R$25). Caso tenha recebido o link do InfinitePay, pode pagar normalmente nele. Se n√£o, me informa para te enviar ele ok"
        );
      } else if (msg.body === "3") {
        session.step = "problema";
        session.invalidCount = 0;
        await msg.reply(
          "üí¨ Me conta mais detalhes ou envia uma foto do erro, se tiver!"
        );
      } else if (msg.body === "4") {
        session.step = "configurar";
        session.invalidCount = 0;
        await msg.reply(
          "Em qual dispositivo gostaria de configurar agora?\n\n1Ô∏è‚É£ Celular\n2Ô∏è‚É£ TV Box\n3Ô∏è‚É£ Smart TV\n4Ô∏è‚É£ Computador\n\n0Ô∏è‚É£ Menu inicial"
        );
      } else {
        session.invalidCount = (session.invalidCount || 0) + 1;
        if (session.invalidCount < 2) {
          await msg.reply(
            "Perfeito. Como posso te ajudar?\n\n1Ô∏è‚É£ Quero renovar acesso\n2Ô∏è‚É£ Quero reativar acesso vencido\n3Ô∏è‚É£ Estou com problemas\n\n0Ô∏è‚É£ Menu inicial"
          );
        }
      }
    }
  });

// Iniciar o cliente
client.initialize();
